
restcliente-imdb-api/mp-rest/url=https://imdb8.p.rapidapi.com

x-rapidapi-key=yPLesRyR9RmshOD6x7PhwYJ3OUISp1ETk1sjsnDkTLtaiG4ImI
x-rapidapi-host=imdb8.p.rapidapi.com

mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem 
mp.jwt.verify.issuer=https://quarkus-movie.com.mp/issuer
quarkus.smallrye-jwt.enabled=true
smallrye.jwt.sign.key-location=privateKey.pem

#DEV
# configure your datasource
%dev.quarkus.datasource.db-kind = postgresql
%dev.quarkus.datasource.username = postgres
%dev.quarkus.datasource.password = postgres
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/moviedb

# drop and create the database at startup (use `update` to only update the schema)
#%dev.quarkus.hibernate-orm.database.generation = drop-and-create

######################################################################################

#DEV
# configure your datasource
%test.quarkus.datasource.db-kind = postgresql
%test.quarkus.datasource.username = postgres
%test.quarkus.datasource.password = postgres
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/moviedb_test

#%test.quarkus.hibernate-orm.sql-load-script = import.sql
%test.quarkus.hibernate-orm.sql-load-script = import-test.sql
#quarkus.hibernate-orm.sq
# drop and create the database at startup (use `update` to only update the schema)
%test.quarkus.hibernate-orm.database.generation = drop-and-create
%test.quarkus.hibernate-orm.log.sql=true

#PROD
# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ${DATABASE_USER}
quarkus.datasource.password = ${DATABASE_PASSWD}
quarkus.datasource.jdbc.url = jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}

# drop and create the database at startup (use `update` to only update the schema)
#%prod.quarkus.hibernate-orm.database.generation = drop-and-create